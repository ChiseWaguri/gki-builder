name: Build GKI - TEST

on:
  workflow_dispatch:
   inputs:

    KSU:
     description: 'KSU'
     required: false
     default: false
     type: boolean

    KSUNEXT:
     description: 'KSU-Next (WIP)'
     required: false
     default: false
     type: boolean

    SUSFS4KSU:
     description: 'SUSFS4KSU (KSU needed!)'
     required: false
     default: false
     type: boolean

    CUSTOM_CLANG:
     description: 'Use custom clang'
     required: true
     default: false

    AOSP_CLANG:
     description: 'Use Android clang'
     required: true
     default: false

jobs:
  build:
    name: Build GKI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
       sudo apt update -y
       sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4 zstd libarchive-tools -y
       sudo aptitude install libssl-dev -y

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Build
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        TOKEN: ${{ secrets.TOKEN }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        BOOT_SIGN_KEY: ${{ secrets.BOOT_SIGN_KEY }}
        STATUS: "BETA"
      run: |
       chmod a+x *.sh

       if [[ "${{ inputs.SUSFS4KSU }}" == "true" ]]; then
            export USE_KSU_SUSFS="yes"
       fi

       if [[ "${{ inputs.KSU }}" == "true" ]]; then
            export USE_KSU="yes"
       fi

       if [[ "${{ inputs.KSUNEXT }}" == "true" ]]; then
            export USE_KSU_NEXT="yes"
       fi

       if [[ "${{ inputs.CUSTOM_CLANG }}" == "true" ]]; then
           sed -i 's/export USE_CUSTOM_CLANG=.*/export USE_CUSTOM_CLANG=true/g' config.sh
           sed -i 's/export USE_AOSP_CLANG=.*/export USE_AOSP_CLANG=false/g' config.sh
       elif [[ "${{ inputs.AOSP_CLANG }}" == "true" ]]; then
           sed -i 's/export USE_CUSTOM_CLANG=.*/export USE_CUSTOM_CLANG=false/g' config.sh
           sed -i 's/export USE_AOSP_CLANG=.*/export USE_AOSP_CLANG=true/g' config.sh
       fi
       
       ./build.sh
