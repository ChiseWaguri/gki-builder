name: Build GKI - TEST

on:
  workflow_dispatch:
   inputs:

    KernelSU:
      description: 'KernelSU'
      required: false
      default: ''
      type: choice
      options:
      - 'None'
      - 'OG KernelSU'
      - 'KernelSU-Next'

    SUSFS4KSU:
      description: 'SUSFS4KSU (KSU needed!)'
      default: false
      type: boolean

    Clang:
      description: 'Select Compiler'
      required: false
      default: ''
      type: choice
      options:
      - 'Default'
      - 'AOSP Clang'
      - 'Custom Clang'

    BUILD_BOOTIMG:
      description: 'Build Boot Image'
      default: false
      type: boolean

    UPLOAD2GH:
      description: 'Upload to GitHub Release'
      default: false
      type: boolean

jobs:
  build:
    name: Build GKI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
       export MAN_DISABLE=true
       sudo apt update -y
       sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4 zstd libarchive-tools ccache -y
       sudo aptitude install libssl-dev -y

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: kernel-${{ github.ref_name }}
        max-size: 4G
        restore-keys: |
          kernel-${{ github.ref_name }}-
          kernel-

    - name: Build
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        TOKEN: ${{ secrets.TOKEN }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        STATUS: "BETA"
        BUILD_KERNEL: "yes"
      run: |
       chmod a+x *.sh

       if [[ ${{ inputs.SUSFS4KSU }} == "true" ]]; then
            export USE_KSU_SUSFS="yes"
       fi

       if [[ ${{ inputs.KernelSU }} == "OG KernelSU" ]]; then
            export USE_KSU="yes"
       elif [[ ${{ inputs.KernelSU }} == "KernelSU-Next" ]]; then
            export USE_KSU_NEXT="yes"
       fi

       if [[ ${{ inputs.Clang }} == "AOSP Clang" ]]; then
           sed -i 's/export USE_CUSTOM_CLANG=.*/export USE_CUSTOM_CLANG=false/g' config.sh
           sed -i 's/export USE_AOSP_CLANG=.*/export USE_AOSP_CLANG=true/g' config.sh
       elif [[ ${{ inputs.Clang }} == "Custom Clang" ]]; then
           sed -i 's/export USE_CUSTOM_CLANG=.*/export USE_CUSTOM_CLANG=true/g' config.sh
           sed -i 's/export USE_AOSP_CLANG=.*/export USE_AOSP_CLANG=false/g' config.sh
       elif [[ ${{ inputs.Clang }} == "Default" ]]; then
            : # follow config.sh
       fi

       if [[ ${{ inputs.BUILD_BOOTIMG }} == "true" ]]; then
            export BUILD_BOOTIMG="yes"
       fi

       if [[ ${{ inputs.UPLOAD2GH }} == "true" ]]; then
            export UPLOAD2GH="yes"
       fi

       export PATH="/usr/lib/ccache:$PATH"
       ./build.sh

    - name: Upload kernel zip
      uses: actions/upload-artifact@v4
      if: inputs.UPLOAD2GH == 'false'
      with:
        name: kernel-${{ github.run_number }}
        path: "./*.zip"

    - name: Upload boot image (gzip)
      uses: actions/upload-artifact@v4
      if: inputs.BUILD_BOOTIMG == 'true' && inputs.UPLOAD2GH== 'false'
      with:
        name: boot-gz-${{ github.run_number }}
        path: "./*-gz.img"

    - name: Upload boot image (lz4)
      uses: actions/upload-artifact@v4
      if: inputs.BUILD_BOOTIMG == 'true' && inputs.UPLOAD2GH == 'false'
      with:
        name: boot-lz4-${{ github.run_number }}
        path: "./*-lz4.img"

    - name: Upload boot image (raw)
      uses: actions/upload-artifact@v4
      if: inputs.BUILD_BOOTIMG == 'true' && inputs.UPLOAD2GH == 'false'
      with:
        name: boot-raw-${{ github.run_number }}
        path: "./*-raw.img"
